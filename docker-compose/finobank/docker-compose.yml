version: '3.7'

services:
  accountsdb:
    container_name: accountsdb
    ports:
      - "5432:5432"
    volumes:
      - accountsdb:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: accountsdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  paymentsdb:
    container_name: paymentsdb
    ports:
      - "5433:5432"
    volumes:
      - paymentsdb:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paymentsdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  usersdb:
    container_name: usersdb
    ports:
      - "5434:5432"
    volumes:
      - usersdb:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: usersdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  configserver:
    image: "rohitkalaghatkar/configserver:latest"
    container_name: configserver
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config

  eurekaserver:
    image: "rohitkalaghatkar/eurekaserver:latest"
    container_name: eurekaserver
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-config

  accounts:
    image: "rohitkalaghatkar/accounts:latest"
    container_name: accounts-ms
    ports:
      - "8080:8080"
    depends_on:
      accountsdb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-config

  payments:
    image: "rohitkalaghatkar/payments:latest"
    container_name: payments-ms
    ports:
      - "8081:8081"
    depends_on:
      paymentsdb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-config

  users:
    image: "rohitkalaghatkar/users:latest"
    container_name: users-ms
    ports:
      - "8082:8082"
    depends_on:
      paymentsdb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-config

  keycloakdb:
    container_name: keycloakdb
    ports:
      - "5431:5432"
    volumes:
      - keycloakdb:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloakdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0
    command: start-dev --import-realm
    ports:
      - "8060:8080"
    volumes:
      - ./../keycloak-masterdata:/opt/keycloak/data/import
    environment:
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/keycloak/data/import
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloakdb
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    depends_on:
      keycloakdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 5s
      timeout: 2s
      retries: 15
    extends:
      file: common-config.yml
      service: microservice-base-config

  gatewayserver:
    image: "rohitkalaghatkar/gatewayserver:latest"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    depends_on:
      accounts:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      payments:
        condition: service_healthy
      users:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-config

volumes:
  accountsdb:
    driver: local
  keycloakdb:
    driver: local
  paymentsdb:
    driver: local
  usersdb:
    driver: local

networks:
  finobank:
    driver: bridge